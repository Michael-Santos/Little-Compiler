PROGRAM sequencias
BEGIN
  -- Mensagens para impressao
  STRING msg1 := "Escolha operacao desejada: (0) N termo de Fibonacci, (1) Calcular fatorial:" ;
  STRING msg2 := "Insira o valor desejado:" ;
  STRING msgErro := "Entrada invalida!" ;
  INT umInteiro;
  FLOAT eusouumfloat, umInteiro;
  
  -- Fibonacci recursivo
  FUNCTION INT fibonacci (INT termo)
  BEGIN
    IF ( termo < 2 ) THEN
      RETURN termo ;
    ELSE
      RETURN fibonacci ( termo - 1 , eusouumfloat, umInteiro) + fibonacci ( termo - 2 ) ;
    ENDIF
  END

  -- Fatorial
  FUNCTION INT fatorial (INT termo)
  BEGIN
    INT i , resultado ;

    IF ( termo = 0 ) THEN
      RETURN 1 ;
    ELSE
      resultado := termo ;
      FOR (i := termo - 1 ; i > 0 ; i := i - 1)
        resultado := resultado * i ;
      ENDFOR
    ENDIF
    RETURN resultado ;
  END
  
  FUNCTION INT main (INT uminteiro)
  BEGIN
    INT resultado , opcao , termo , outroInteiro ;
    FLOAT outroFloat;

    -- Impressao de opcoes e recebimento das entradas
    WRITE ( msg1 );
    READ ( opcao );
    WRITE ( msg2 );
    READ ( termo );
    
    outroInteiro := umInteiro;
    eusouumfloat := umInteiro + outroInteiro;
    eusouumfloat := umInteiro + eusouumfloat;
    -- Apenas a expressão abaixo irá gerar um erro
    outroInteiro := umInteiro + eusouumfloat;
    
    -- Verifica opcao
    IF ( opcao = 0 ) THEN
      -- Fibonacci
      resultado := fibonacci ( termo ) ;
    ELSE
      IF ( opcao = 1 ) THEN
        -- Fatorial
        resultado := fatorial ( termo ) ;
      ELSE
        -- Opcao inexistente (imprime mensagem de erro)
        WRITE ( msgErro ) ;
        RETURN 0 ;
      ENDIF
    ENDIF

    WRITE ( opcao , termo , resultado );
    RETURN 0 ;
  END
  
  FUNCTION VOID testeVoid1 ()
  BEGIN
    READ (msg2) ;
    WRITE (testeVoid1) ;
    RETURN umInteiro ;
    RETURN testeVoid1() ;
  END
  
  FUNCTION VOID testeVoid2 ()
  BEGIN
  END
END
